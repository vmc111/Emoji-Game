{"version":3,"sources":["components/NavBar/index.js","components/EmojiCard/index.js","components/WinOrLoseCard/index.js","components/EmojiGame/index.js","App.js","index.js"],"names":["NavBar","props","score","topScore","body","gameStatus","_jsx","className","children","_jsxs","src","alt","_Fragment","EmojiCard","onclickFunction","item","value","id","emojiUrl","onClick","emojiName","Card","btnFun","totalScore","imgUrl","winStatus","isBest","type","EmojiGame","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","preScore","clickedEmojiIds","isGameOver","nextGame","setState","_createClass","key","_this2","emojisList","this","totalEmojis","_this$state","shuffledEmojiList","sort","Math","random","emojiClicked","includes","preState","_toConsumableArray","cardBody","gameBody","map","eachEmoji","Component","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02141358.chunk.js","sourcesContent":["// Write your code here.\nimport './index.css'\n\nconst NavBar = props => {\n  const {score, topScore, gameStatus} = props\n\n  const gameOver = (\n    <div className=\"navbar\">\n      <div className=\"row-ele\">\n        <img\n          className=\"logo\"\n          src=\"https://assets.ccbp.in/frontend/react-js/game-logo-img.png \"\n          alt=\"emoji logo\"\n        />\n        <p>Emoji Game</p>\n      </div>\n    </div>\n  )\n\n  const gameNotOver = (\n    <div className=\"navbar\">\n      <div className=\"row-ele\">\n        <img\n          className=\"logo\"\n          src=\"https://assets.ccbp.in/frontend/react-js/game-logo-img.png \"\n          alt=\"emoji logo\"\n        />\n        <h1>Emoji Game</h1>\n      </div>\n      <div className=\"row-ele\">\n        <p className=\"score-margin\">Score: {score}</p>\n        <p>Top Score: {topScore}</p>\n      </div>\n    </div>\n  )\n\n  const body = gameStatus ? gameOver : gameNotOver\n\n  return <>{body}</>\n}\n\nexport default NavBar\n","// Write your code here.\nimport './index.css'\n\nconst EmojiCard = props => {\n  const {onclickFunction, item} = props\n\n  const toDo = () => {\n    onclickFunction(item.id)\n  }\n\n  return (\n    <li value={item.id} className=\"card-item\">\n      <img\n        src={item.emojiUrl}\n        onClick={toDo}\n        alt={item.emojiName}\n        className=\"img\"\n      />\n    </li>\n  )\n}\n\nexport default EmojiCard\n","// Write your code here.\nimport './index.css'\n\nconst Card = props => {\n  const {score, topScore, btnFun, totalScore} = props\n\n  const changeGame = () => {\n    btnFun()\n  }\n\n  const gameWonUrl = 'https://assets.ccbp.in/frontend/react-js/won-game-img.png'\n  const gameLostUrl =\n    'https://assets.ccbp.in/frontend/react-js/lose-game-img.png'\n\n  const imgUrl = score === totalScore ? gameWonUrl : gameLostUrl\n  const winStatus = score === totalScore ? 'You Won' : 'You Lose'\n  const isBest = score >= topScore ? 'Best ' : ''\n\n  return (\n    <div className=\"win-loss-container\">\n      <img src={imgUrl} alt=\"won\" className=\"game-img\" />\n      <div className=\"column-ele\">\n        <h1>{winStatus}</h1>\n        <p>{isBest}Score</p>\n        <h4>\n          {score}/{totalScore}\n        </h4>\n        <button type=\"button\" className=\"btn\" onClick={changeGame}>\n          Play Again\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import {Component} from 'react'\nimport './index.css'\nimport NavBar from '../NavBar/index'\nimport EmojiCard from '../EmojiCard'\nimport Card from '../WinOrLoseCard/index'\n\n/* \nQuick Tip \n\n- Use the below function in the EmojiGame Component to shuffle the emojisList every time when an emoji is clicked.\n\nconst shuffledEmojisList = () => {\n  const {emojisList} = this.props\n  return emojisList.sort(() => Math.random() - 0.5)\n}\n\n*/\n\n// Write your code here.\n\nclass EmojiGame extends Component {\n  state = {\n    score: 0,\n    preScore: 0,\n    topScore: 0,\n    clickedEmojiIds: [],\n    isGameOver: false,\n  }\n\n  nextGame = () => {\n    const {score} = this.state\n    this.setState({isGameOver: false, score: 0, preScore: score})\n  }\n\n  render() {\n    const {emojisList} = this.props\n    const totalEmojis = emojisList.length\n    const {score, preScore, topScore, clickedEmojiIds, isGameOver} = this.state\n    const shuffledEmojiList = emojisList.sort(() => Math.random() - 0.5)\n\n    const emojiClicked = id => {\n      if (clickedEmojiIds.includes(id)) {\n        if (topScore < score) {\n          this.setState({topScore: score})\n        }\n        this.setState({\n          score: 0,\n          preScore: score,\n          clickedEmojiIds: [],\n          isGameOver: true,\n        })\n      } else if (score === totalEmojis - 1) {\n        this.setState({\n          isGameOver: true,\n          preScore: totalEmojis,\n          topScore: totalEmojis,\n          clickedEmojiIds: [],\n        })\n      } else {\n        this.setState(preState => ({\n          score: preState.score + 1,\n          clickedEmojiIds: [...preState.clickedEmojiIds, id],\n        }))\n      }\n    }\n\n    const cardBody = (\n      <Card\n        score={preScore}\n        topScore={topScore}\n        btnFun={this.nextGame}\n        totalScore={totalEmojis}\n      />\n    )\n\n    const gameBody = (\n      <ul className=\"emojis-container\">\n        {shuffledEmojiList.map(eachEmoji => (\n          <EmojiCard\n            onclickFunction={emojiClicked}\n            item={eachEmoji}\n            key={eachEmoji.id}\n          />\n        ))}\n      </ul>\n    )\n\n    const body = isGameOver ? cardBody : gameBody\n\n    return (\n      <div className=\"bg-main\">\n        <NavBar score={score} topScore={topScore} gameStatus={isGameOver} />\n        {body}\n      </div>\n    )\n  }\n}\n\nexport default EmojiGame\n","import EmojiGame from './components/EmojiGame'\n\nimport './App.css'\n\nconst emojisList = [\n  {\n    id: 0,\n    emojiName: 'Face with stuck out tongue',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-stuck-out-tongue-img.png',\n  },\n  {\n    id: 1,\n    emojiName: 'Face with head bandage',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-head-bandage-img.png',\n  },\n  {\n    id: 2,\n    emojiName: 'Face with hugs',\n    emojiUrl: 'https://assets.ccbp.in/frontend/react-js/face-with-hugs-img.png',\n  },\n  {\n    id: 3,\n    emojiName: 'Face with laughing',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-laughing-img.png',\n  },\n  {\n    id: 4,\n    emojiName: 'Laughing face with hand in front of mouth',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-laughing-with-hand-infront-mouth-img.png',\n  },\n  {\n    id: 5,\n    emojiName: 'Face with mask',\n    emojiUrl: 'https://assets.ccbp.in/frontend/react-js/face-with-mask-img.png',\n  },\n  {\n    id: 6,\n    emojiName: 'Face with silence',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-silence-img.png',\n  },\n  {\n    id: 7,\n    emojiName: 'Face with stuck out tongue and winked eye',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-stuck-out-tongue-and-winking-eye-img.png',\n  },\n  {\n    id: 8,\n    emojiName: 'Grinning face with sweat',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/grinning-face-with-sweat-img.png',\n  },\n  {\n    id: 9,\n    emojiName: 'Smiling face with heart eyes',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/smiling-face-with-heart-eyes-img.png',\n  },\n  {\n    id: 10,\n    emojiName: 'Grinning face',\n    emojiUrl: 'https://assets.ccbp.in/frontend/react-js/grinning-face-img.png',\n  },\n  {\n    id: 11,\n    emojiName: 'Smiling face with star eyes',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/smiling-face-with-star-eyes-img.png',\n  },\n]\n\nconst App = () => <EmojiGame emojisList={emojisList} />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}